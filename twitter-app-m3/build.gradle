apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'application'

jar {
	baseName = 'twitter-app-m3'
	version = '1.0.0-M3'
}

//mainClassName = "org.example.app.MyApp"

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext.assertJVersion  = '3.5.2'
ext.h2Version       = '1.4.193'
ext.junitVersion    = '4.12'
ext.mockitoJVersion = '2.7.0'
ext.lombokVersion	= '1.16.12'
ext.log4jVersion 	= '2.8'
ext.mailApiVersion  = '1.5.6'
ext.mailVersion     = '1.4.7'
ext.slf4jVersion    = '1.7.23'
ext.springVersion   = '4.3.6.RELEASE'
ext.wiserVersion    = '3.1.7'

repositories {
	mavenCentral()
}

dependencies {
	compileOnly("org.projectlombok:lombok:${lombokVersion}")
	compile("org.apache.logging.log4j:log4j-api:${log4jVersion}")
	compile("org.apache.logging.log4j:log4j-core:${log4jVersion}")
	compile("org.springframework:spring-context:${springVersion}")
	compile("org.springframework:spring-context-support:${springVersion}")
	compile("javax.mail:javax.mail-api:${mailApiVersion}")
	compile("org.springframework:spring-jdbc:${springVersion}")
	compile("org.springframework:spring-tx:${springVersion}")
	compile("com.h2database:h2:${h2Version}")
	
	runtime("javax.mail:mail:${mailVersion}")
	runtime("org.apache.logging.log4j:log4j-core:${log4jVersion}")
	runtime("org.apache.logging.log4j:log4j-jcl:${log4jVersion}")
	runtime("org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}")
	runtime ("org.slf4j:slf4j-api:${slf4jVersion}")

	testCompile("org.springframework:spring-test:${springVersion}")
	testCompile("org.subethamail:subethasmtp:${wiserVersion}")
	testCompile("junit:junit:${junitVersion}")
	testCompile("org.assertj:assertj-core:${assertJVersion}")
	testCompile("org.mockito:mockito-core:${mockitoJVersion}")
}

eclipse.project {
	natures 'org.springframework.ide.eclipse.core.springnature'
	buildCommand 'org.springframework.ide.eclipse.core.springbuilder'
}

task wrapper(type: Wrapper) {
	gradleVersion = '3.3'
}

task showMeCache {
  doLast {
    println('compileOnly dependencies:')
    configurations.compileOnly.each { println it }
    println('testCompile dependencies:')
    configurations.testCompile.each { println it }
  }
}